    {
        "rect":"const newNode = topology.addNode({\n      rect:{ \n        x:10, \n        y:10,\n        width:50,\n        height:50\n      },\n      name:'circle',\n      strokeStyle:'red'\n})",
        "strokeStyle":"const newNode = topology.addNode({\n      rect:{ \n        x:10, \n        y:10,\n        width:50,\n        height:50\n      },\n      name:'circle',\n      strokeStyle:'red'\n})",
        "pens1":"const newNode = topology.addNode({\n       rect: {\n           x:10,\n           y: 10,\n            width: 50,\n            height: 50,\n            },\n       name: 'triangle',\n       strokeStyle: 'red',\n       lineWidth:10,\n       fillStyle:'black',\n       globalAlpha:1,\n       rotate:90\n      });",
        "font":"const newNode = topology.addNode({\n      rect: {\n        x:10,\n        y: 10,\n        width: 150,\n        height: 50\n      },\n      name:'rectangle',\n      text:'我是一个文本',\n      font:{\n        color:'#000',\n        background:'red',\n        fontSize:15\n      },\n      locked:1\n       });",
        "animation":"const state=Node.cloneState(node);state.rect.y-=10;state.rect.ey-=10;node.animateFrames.push({duration:100,linear:true,state});const state2=Node.cloneState(node);node.animateFrames.push({duration:100,linear:true,state:state2});node.animateDuration=0;for(const item of node.animateFrames){node.animateDuration+=item.duration}node.animateStart=Date.now();node.animateStart=0 canvas.animate();",
        "msg":"const canvasOptions={};const onMessage=(event,data)=>{console.log(event,data)};canvasOptions.on=onMessage;"
    }
